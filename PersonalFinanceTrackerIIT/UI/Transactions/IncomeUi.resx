<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="incomeContextMenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBEAAAEAIADsCAAAFgAAACgAAAAgAAAAIgAAAAEAIAAAAAAAgAgAAAAAAAAAAAAAAAAAAAAA
        AACSMS7/kjEu9JEwLuSSMS70kjEu9JExLvCSMS73kjEu9ZIxLvGRMC7tkjEu9ZIxLvCRMS7okjEu8ZEw
        Lt+PMC2hkjEu9JIxLvaRMC7okjAu9JIxLvySMS7rkTEu6ZIxLvaRMS70kjAu7ZEwLuiRMC7wkTAu8ZEw
        LuiSMC7ukDEu9JIxLv2QMC2mjjAuiI0vLY6PMC2lji8siJAwLaeOLy2EjS8sgYstKoGOLy2mji8sn4ku
        K1uMLy2IjjAurY0vLXOQMS7KkDAurI0vLYiNLyyMkTAu448wLZKOMC2Rjy8tk48wLaWMLiyAiy0qb4wt
        KnSNLiyLjC4rgY4vLIqQMS7wkjEu+5AwLZiQMC6yiy4seI4wLYmOLyyNji8slY4vLZqNLit7jC8siY0v
        LYuOLyyIii4rdIgtKnGMLy2OjjAuoY8wLr+QMC61jS8tjYstK2SQLy3EkDAtko8wLaKNLStljS8tfo8w
        LaKNLyx+jC4qaI4vLZWOLyyfjzAtmJAxLvSRMS7vkDAuv5AwLsqQMC7KkTEu5pEwLtCRMC7akjEu7ZEx
        LumSMS7skTEu6ZIxLuaRMC7WkC8tvpAxLtOSMS7tkjEu7JIxLu2SMS7nkDAtuZAvLMaQMC2ojy8tn5Aw
        LbqRMC7SkjEu65IxLuWQMC7AkTAu5JExLumSMS7skDEu6Y8wLUKPMC1TjzAtU48wLVOPLy1TjzAtU48v
        LVOPLy1Sjy8tR5EwLTiQMC0/jy8tUo8wLVOPMC1Ujy8tVI8vLVKPLy1Sjy8tUpAwLUmSMC05kS8sOJEw
        LTmRMC06kTAtOpAvLUqPLy1Sjy8tU48vLU2RMC05kTAtOJEwLTiQMC41jy8tUZExLtaRMS7ZkTEu2JEx
        LtiRMS7YkTEu2ZEwLtmOMC11kTAtAI4vLTaRMC7SkTEu2ZExLtiRMS7YkTEu2JExLtmRMS7ZkDAuiJsy
        LgCRLy0AkTAtAJEwLQCeNC0AkDAuipEwLtiRMC7YkDAuoYYqLgSRMC0AkTAtAJAwLgCQLy1ekTEu8JIx
        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
        fgfB8H4HwfB+B8HwfwcAQAAAAEAAAABAAAA=
</value>
  </data>
</root>